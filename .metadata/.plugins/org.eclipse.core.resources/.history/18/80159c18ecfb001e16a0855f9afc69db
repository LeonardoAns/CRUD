package com.poduct.category.service;

import java.util.List;
import java.util.stream.Collectors;

import org.modelmapper.ModelMapper;
import org.springframework.stereotype.Service;

import com.poduct.category.entity.Product;
import com.poduct.category.entityDto.ProductCreateResponseDto;
import com.poduct.category.entityDto.ProductRequestDto;
import com.poduct.category.entityDto.ProductResponseDto;
import com.poduct.category.repository.ProductRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class ProductService {

	
	private final ProductRepository productRepository;
	private final ModelMapper modelMapper;
		
	public ProductCreateResponseDto insertProduct(ProductRequestDto productRequestDto) {
		Product product = modelMapper.map(productRequestDto, Product.class);
		product = this.productRepository.save(product);
		
		ProductCreateResponseDto response = modelMapper.map(product, ProductCreateResponseDto.class);
		return response;
	}
	
	public List<ProductResponseDto> findAllProducts(){
		List<Product> products = this.productRepository.findAll();
		return products.stream()
                .map(product -> modelMapper.map(product, ProductResponseDto.class))
                .collect(Collectors.toList());
	
	}
	
	public Product findById(Long id) {
		return this.productRepository.findById(id).orElseThrow(() -> new RuntimeException("Id n√£o existe"));
	}
	
	public void deleteProduct(Long id) {
		 this.productRepository.deleteById(id);
	}
}
